def USER_SELECTION = ''

def static PROCEED_PRODUCTION = 'Proceed Production'
def static ROLLBACK_TEST = 'RollBack Test'


def static HTTP_OK_STATUS = 'HTTP/1.1 200 OK'

def CURRENT_HTTP_STATUS = ''
def WEB_TEST_RESULT = ''


def static WEB_TEST_RESULT_FAIL = 'FAIL'
def static WEB_TEST_RESULT_PASS = 'PASS'

pipeline {
    agent any

    triggers {
        pollSCM('*/5 * * * *')
    }

    stages {

        stage('ST1 3114394F') {
            steps {

                echo 'ST1 3114394F: Environment is prepared. Start to rollout to TEST server'

            }
        }

        stage('ST2 3114394F') {
            steps {
            
                sh 'docker image rm bkup-test-image -f'

                sh 'docker commit TESTsvr3114394F bkup-test-image'

                sh 'bolt script run 3114394F_script --targets TESTsvr3114394F.localdomain --user testsvradm --password password --no-host-key-check --run-as root'

                echo 'ST2 3114394F: TEST server is backup and updated'

            }
        }

        stage('ST3 3114394F') {
            steps {

                sh 'curl -is http://TESTsvr3114394F.localdomain | head -n 1 > /tmp/TEST-result-file'

                echo 'ST3 3114394F: Test result for TEST server is generated: TEST-result-file'
                
                script {

                    CURRENT_HTTP_STATUS = sh (script: 'cat /tmp/TEST-result-file', returnStdout: true).trim()

                    //CURRENT_HTTP_STATUS = 'asd'
  
                    if (CURRENT_HTTP_STATUS == HTTP_OK_STATUS) {
                        WEB_TEST_RESULT = WEB_TEST_RESULT_PASS
                        echo 'ST3 3114394F: Test result for TEST server PASSED'
                    }else {
                        WEB_TEST_RESULT = WEB_TEST_RESULT_FAIL
                        echo 'ST3 3114394F: Test result for TEST server FAILED'
                    }
                }

            }
        }

        stage('ST4 3114394F') {
            when {
                anyOf {
                    equals expected: WEB_TEST_RESULT_PASS, actual: WEB_TEST_RESULT;
                    equals expected: WEB_TEST_RESULT_FAIL, actual: WEB_TEST_RESULT;
                }
            }
            steps {

                script {

                    if (WEB_TEST_RESULT == WEB_TEST_RESULT_PASS) {

                        echo "ST4 3114394F: TEST server's testing result has been inspected"

                        USER_SELECTION = input( 
                                                message: "Proceed Production or RollBack?", 
                                                parameters: [
                                                    choice(
                                                        name: 'user_choice', 
                                                        choices: [PROCEED_PRODUCTION, ROLLBACK_TEST]
                                                    )
                                                ]
                                            )

                    }else if (WEB_TEST_RESULT == WEB_TEST_RESULT_FAIL) {

                        echo "ST4 3114394F: Selecting 'Rollback Test' since Web Test Result FAILED"
                        USER_SELECTION = ROLLBACK_TEST

                    }
                } 

            }
        }

        stage ('ST5 3114394F') {
            when {
                anyOf {
                    equals expected: ROLLBACK_TEST, actual: USER_SELECTION;
                    equals expected: PROCEED_PRODUCTION, actual: USER_SELECTION;
                }
            }
            steps {
                
                script {

                    if (USER_SELECTION == PROCEED_PRODUCTION) {

                        sh 'bolt script run 3114394F_script --targets PRODsvr3114394F.localdomain --user prodsvradm --password password --no-host-key-check --run-as root'
                        
                    }else if (USER_SELECTION == ROLLBACK_TEST) {

                        sh 'docker container stop TESTsvr3114394F'

                        sh 'docker container remove TESTsvr3114394F'
                        
                        sh 'docker compose --file operate-docker-container-setup/backup-test-server/testsvrbkup-docker-compose.yml up -d'

                        sh 'docker image prune --all --force'

                    }
                }

            }
        }

        stage ('ST6 3114394F') {
            steps {
                
                script {

                    if (USER_SELECTION == PROCEED_PRODUCTION){

                        echo "ST6 3114394F: Production server is updated"

                    }else if (USER_SELECTION == ROLLBACK_TEST) {

                        echo "ST6 3114394F: TEST server is rollback"

                    }
                }

            }
        }

    }
}